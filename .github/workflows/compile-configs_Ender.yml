name: Ender-3V2 Build Configs

######################### Ender-3 #########################

on:
  workflow_dispatch:
  release:
    types: [prereleased]

jobs:
  Build-Default-E:            # Default NoPro for Ender-3
    name: Build Default Files E
    runs-on: ubuntu-latest
    strategy:
      matrix:
        temp: [true,false]
        inshape: [true,false]
        tjc: [true,false]
    steps:
    - uses: actions/checkout@v3
    - name: Setup node
      uses: actions/setup-node@v3
      with:
        node-version: 16
    - name: Cache pip
      uses: actions/cache@v3.3.2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Cache PlatformIO
      uses: actions/cache@v3.3.2
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install PlatformIO
      run: |
        python3 -m pip install --upgrade pip
        pip install --upgrade pip
        pip install --upgrade wheel
        pip install --upgrade platformio
    - name: Run PlatformIO
      id: build_configs
      run: |
        if ($TP); then TPTMP=-MPC; else TPTMP=; fi;
        if ($IS); then ISTMP=-IS; else ISTMP=; fi;
        if ($TJC); then DTMP=TJC-; else DTMP=; fi;
        echo "filename=${DTMP}Ender_GD32_Default-NoPro${ISTMP}${TPTMP}.bin" >> $GITHUB_OUTPUT
        > Marlin/Configuration.h
        > Marlin/Configuration_adv.h
        > Marlin/Version.h
        cp configurations/Creality\ Ender/Default-NP/Configuration.h Marlin/Configuration.h
        cp configurations/Creality\ Ender/Default-NP/Configuration_adv.h Marlin/Configuration_adv.h
        cp configurations/Creality\ Ender/Default-NP/Version.h Marlin/Version.h
        sed -i "s/default_envs =.*/default_envs = GD32F303RE_creality_maple/g" platformio.ini
        if ($IS); then TEMP=; else TEMP='\/\/'; fi;
        sed -i "s/[^ ]*#define INPUT_SHAPING_X/$TEMP#define INPUT_SHAPING_X/g" Marlin/Configuration_adv.h
        sed -i "s/[^ ]*#define INPUT_SHAPING_Y/$TEMP#define INPUT_SHAPING_Y/g" Marlin/Configuration_adv.h
        if ($TP); then PTEMP='\/\/'; else PTEMP=; fi;
        sed -i "s/[^ ]*#define PIDTEMP/$PTEMP#define PIDTEMP/g" Marlin/Configuration.h
        if ($TP); then MTEMP=; else MTEMP='\/\/'; fi;
        sed -i "s/[^ ]*#define MPCTEMP/$MTEMP#define MPCTEMP/g" Marlin/Configuration.h
        if ($TJC); then TJEMP=; else TJEMP='\/\/'; fi;
        sed -i "s/[^ ]*#define TJC_DISPLAY/$TJEMP#define TJC_DISPLAY/g" Marlin/Configuration.h
        pio run
        mkdir temp
        mv .pio/build/GD32F303RE_creality_maple/*.bin temp/build.bin
      env:
        TP: ${{ matrix.temp }}
        IS: ${{ matrix.inshape }}
        TJC: ${{ matrix.tjc }}
    - name: Get release
      id: get_release
      uses: bruceadams/get-release@v1.3.2
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Upload Release Asset
      uses: tanyagray/action-upload-release-asset@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: temp/build.bin
        asset_name: ${{ steps.build_configs.outputs.filename }}
        asset_content_type: application/x-binary
  Build-Manual-Mesh-E:        # MM Pro for Ender-3
    name: Build Manual-Mesh Files E
    runs-on: ubuntu-latest
    strategy:
      matrix:
        temp: [true,false]
        inshape: [true,false]
        tjc: [true,false]
    steps:
    - uses: actions/checkout@v3
    - name: Setup node
      uses: actions/setup-node@v3
      with:
        node-version: 16
    - name: Cache pip
      uses: actions/cache@v3.3.2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Cache PlatformIO
      uses: actions/cache@v3.3.2
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install PlatformIO
      run: |
        python3 -m pip install --upgrade pip
        pip install --upgrade pip
        pip install --upgrade wheel
        pip install --upgrade platformio
    - name: Run PlatformIO
      id: build_configs
      run: |
        if ($TP); then TPTMP=-MPC; else TPTMP=; fi;
        if ($IS); then ISTMP=-IS; else ISTMP=; fi;
        if ($TJC); then DTMP=TJC-; else DTMP=; fi;
        echo "filename=${DTMP}Ender_GD32_MM-ProUI${ISTMP}${TPTMP}.bin" >> $GITHUB_OUTPUT
        > Marlin/Configuration.h
        > Marlin/Configuration_adv.h
        > Marlin/Version.h
        cp configurations/Creality\ Ender/MM/Configuration.h Marlin/Configuration.h
        cp configurations/Creality\ Ender/MM/Configuration_adv.h Marlin/Configuration_adv.h
        cp configurations/Creality\ Ender/MM/Version.h Marlin/Version.h
        sed -i "s/default_envs =.*/default_envs = GD32F303RE_creality_maple/g" platformio.ini
        if ($IS); then TEMP=; else TEMP='\/\/'; fi;
        sed -i "s/[^ ]*#define INPUT_SHAPING_X/$TEMP#define INPUT_SHAPING_X/g" Marlin/Configuration_adv.h
        sed -i "s/[^ ]*#define INPUT_SHAPING_Y/$TEMP#define INPUT_SHAPING_Y/g" Marlin/Configuration_adv.h
        if ($TP); then PTEMP='\/\/'; else PTEMP=; fi;
        sed -i "s/[^ ]*#define PIDTEMP/$PTEMP#define PIDTEMP/g" Marlin/Configuration.h
        if ($TP); then MTEMP=; else MTEMP='\/\/'; fi;
        sed -i "s/[^ ]*#define MPCTEMP/$MTEMP#define MPCTEMP/g" Marlin/Configuration.h
        if ($TJC); then TJEMP=; else TJEMP='\/\/'; fi;
        sed -i "s/[^ ]*#define TJC_DISPLAY/$TJEMP#define TJC_DISPLAY/g" Marlin/Configuration.h
        pio run
        mkdir temp
        mv .pio/build/GD32F303RE_creality_maple/*.bin temp/build.bin
      env:
        TP: ${{ matrix.temp }}
        IS: ${{ matrix.inshape }}
        TJC: ${{ matrix.tjc }}
    - name: Get release
      id: get_release
      uses: bruceadams/get-release@v1.3.2
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Upload Release Asset
      uses: tanyagray/action-upload-release-asset@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: temp/build.bin
        asset_name: ${{ steps.build_configs.outputs.filename }}
        asset_content_type: application/x-binary
  Build-UBL-ProUI-E:            # UBL Pro for Ender-3
    name: Build UBL Pro Files E
    runs-on: ubuntu-latest
    strategy:
      matrix:
        temp: [true,false]
        inshape: [true,false]
        tjc: [true,false]
        t13: [true,false]
    steps:
    - uses: actions/checkout@v3
    - name: Setup node
      uses: actions/setup-node@v3
      with:
        node-version: 16
    - name: Cache pip
      uses: actions/cache@v3.3.2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Cache PlatformIO
      uses: actions/cache@v3.3.2
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install PlatformIO
      run: |
        python3 -m pip install --upgrade pip
        pip install --upgrade pip
        pip install --upgrade wheel
        pip install --upgrade platformio
    - name: Run PlatformIO
      id: build_configs
      run: |
        if ($TP); then TPTMP=-MPC; else TPTMP=; fi;
        if ($IS); then ISTMP=-IS; else ISTMP=; fi;
        if ($TJC); then DTMP=TJC-; else DTMP=; fi;
        if ($T13); then TTMP=-SpriteT13; else TTMP=; fi
        echo "filename=${DTMP}Ender${TTMP}_GD32_UBL-ProUI${ISTMP}${TPTMP}.bin" >> $GITHUB_OUTPUT
        > Marlin/Configuration.h
        > Marlin/Configuration_adv.h
        > Marlin/Version.h
        cp configurations/Creality\ Ender/UBL/Configuration.h Marlin/Configuration.h
        cp configurations/Creality\ Ender/UBL/Configuration_adv.h Marlin/Configuration_adv.h
        cp configurations/Creality\ Ender/UBL/Version.h Marlin/Version.h
        sed -i "s/default_envs =.*/default_envs = GD32F303RE_creality_maple/g" platformio.ini
        if ($IS); then TEMP=; else TEMP='\/\/'; fi;
        sed -i "s/[^ ]*#define INPUT_SHAPING_X/$TEMP#define INPUT_SHAPING_X/g" Marlin/Configuration_adv.h
        sed -i "s/[^ ]*#define INPUT_SHAPING_Y/$TEMP#define INPUT_SHAPING_Y/g" Marlin/Configuration_adv.h
        if ($TP); then PTEMP='\/\/'; else PTEMP=; fi;
        sed -i "s/[^ ]*#define PIDTEMP/$PTEMP#define PIDTEMP/g" Marlin/Configuration.h
        if ($TP); then MTEMP=; else MTEMP='\/\/'; fi;
        sed -i "s/[^ ]*#define MPCTEMP/$MTEMP#define MPCTEMP/g" Marlin/Configuration.h
        if ($TJC); then TJEMP=; else TJEMP='\/\/'; fi;
        sed -i "s/[^ ]*#define TJC_DISPLAY/$TJEMP#define TJC_DISPLAY/g" Marlin/Configuration.h
        if ($T13); then THMP="13"; else THMP="1"; fi;
        sed -i "s/^#define TEMP_SENSOR_0 1/#define TEMP_SENSOR_0 $THMP/g" Marlin/Configuration.h
        pio run
        mkdir temp
        mv .pio/build/GD32F303RE_creality_maple/*.bin temp/build.bin
      env:
        TP: ${{ matrix.temp }}
        IS: ${{ matrix.inshape }}
        TJC: ${{ matrix.tjc }}
        T13: ${{ matrix.t13 }}
    - name: Get release
      id: get_release
      uses: bruceadams/get-release@v1.3.2
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Upload Release Asset
      uses: tanyagray/action-upload-release-asset@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: temp/build.bin
        asset_name: ${{ steps.build_configs.outputs.filename }}
        asset_content_type: application/x-binary
  # Build-UBL-NoPro-E:          # UBL NoPro for Ender-3
  #   name: Build UBL NoPro Files
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       printer: [AQUILA,ENDER]
  #       grid: [3,5,7]
  #       temp: [true,false]
  #       inshape: [true,false]
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Setup node
  #     uses: actions/setup-node@v3
  #     with:
  #       node-version: 16
  #   - name: Cache pip
  #     uses: actions/cache@v3.3.2
  #     with:
  #       path: ~/.cache/pip
  #       key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
  #       restore-keys: |
  #         ${{ runner.os }}-pip-
  #   - name: Cache PlatformIO
  #     uses: actions/cache@v3.3.2
  #     with:
  #       path: ~/.platformio
  #       key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
  #   - name: Set up Python
  #     uses: actions/setup-python@v4
  #     with:
  #       python-version: '3.10'
  #   - name: Install PlatformIO
  #     run: |
  #       python3 -m pip install --upgrade pip
  #       pip install --upgrade pip
  #       pip install --upgrade wheel
  #       pip install --upgrade platformio
  #   - name: Run PlatformIO
  #     id: build_configs
  #     run: |
  #       if ($TP); then TPTMP=-MPC; else TPTMP=; fi;
  #       if ($IS); then ISTMP=-IS; else ISTMP=; fi;
  #       echo "filename=Ender_GD32_UBL-${GRID}x${GRID}-NoPro${ISTMP}${TPTMP}.bin" >> $GITHUB_OUTPUT
  #       > Marlin/Configuration.h
  #       > Marlin/Configuration_adv.h
  #       > Marlin/Version.h
  #       cp configurations/Creality\ Ender/UBL/Configuration.h Marlin/Configuration.h
  #       cp configurations/Creality\ Ender/UBL/Configuration_adv.h Marlin/Configuration_adv.h
  #       cp configurations/Creality\ Ender/UBL/Version.h Marlin/Version.h
  #       sed -i "s/default_envs =.*/default_envs = GD32F303RE_creality_maple/g" platformio.ini
  #       sed -i "s/#define GRID_MAX_POINTS_X.*/#define GRID_MAX_POINTS_X $GRID/g" Marlin/Configuration.h
  #       if ($IS); then TEMP=; else TEMP='\/\/'; fi;
  #       sed -i "s/[^ ]*#define INPUT_SHAPING_X/$TEMP#define INPUT_SHAPING_X/g" Marlin/Configuration_adv.h
  #       sed -i "s/[^ ]*#define INPUT_SHAPING_Y/$TEMP#define INPUT_SHAPING_Y/g" Marlin/Configuration_adv.h
  #       if ($TP); then PTEMP='\/\/'; else PTEMP=; fi;
  #       sed -i "s/[^ ]*#define PIDTEMP/$PTEMP#define PIDTEMP/g" Marlin/Configuration.h
  #       if ($TP); then MTEMP=; else MTEMP='\/\/'; fi;
  #       sed -i "s/[^ ]*#define MPCTEMP/$MTEMP#define MPCTEMP/g" Marlin/Configuration.h

  #      if [ "$PR" = AQUILA ]; then PTYPE="\/\/"; else PTYPE=; fi;
  #      if ($PR); then PTYPE=; else PTYPE='\/\/'; fi;
  #      #define ALT_COLOR_MENU 2
  #      #define DACAI_DISPLAY
  #      #define DWIN_LCD_PROUI
  #      #define REVERSE_ENCODER_DIRECTION
  #      #define TITLE_CENTERED

  #       pio run
  #       mkdir temp
  #       mv .pio/build/GD32F303RE_creality_maple/*.bin temp/build.bin
  #     env:
  #       PR: ${{ matrix.printer}}
  #       GRID: ${{ matrix.grid }}
  #       TP: ${{ matrix.temp }}
  #       IS: ${{ matrix.inshape }}
  #   - name: Get release
  #     id: get_release
  #     uses: bruceadams/get-release@v1.3.2
  #     env:
  #       GITHUB_TOKEN: ${{ github.token }}
  #   - name: Upload Release Asset
  #     uses: tanyagray/action-upload-release-asset@main
  #     env:
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #     with:
  #       upload_url: ${{ steps.get_release.outputs.upload_url }}
  #       asset_path: temp/build.bin
  #       asset_name: ${{ steps.build_configs.outputs.filename }}
  #       asset_content_type: application/x-binary

  Build-BLTouch-E:            # BLTouch Pro for Ender-3
    name: Build BLT Pro Files E
    runs-on: ubuntu-latest
    strategy:
      matrix:
        temp: [true,false]
        inshape: [true,false]
        tjc: [true,false]
    steps:
    - uses: actions/checkout@v3
    - name: Setup node
      uses: actions/setup-node@v3
      with:
        node-version: 16
    - name: Cache pip
      uses: actions/cache@v3.3.2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Cache PlatformIO
      uses: actions/cache@v3.3.2
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install PlatformIO
      run: |
        python3 -m pip install --upgrade pip
        pip install --upgrade pip
        pip install --upgrade wheel
        pip install --upgrade platformio
    - name: Run PlatformIO
      id: build_configs
      run: |
        if ($TP); then TPTMP=-MPC; else TPTMP=; fi;
        if ($IS); then ISTMP=-IS; else ISTMP=; fi;
        if ($TJC); then DTMP=TJC-; else DTMP=; fi;
        echo "filename=${DTMP}Ender_GD32_BLT-ProUI${ISTMP}${TPTMP}.bin" >> $GITHUB_OUTPUT
        > Marlin/Configuration.h
        > Marlin/Configuration_adv.h
        > Marlin/Version.h
        cp configurations/Creality\ Ender/BLT/Configuration.h Marlin/Configuration.h
        cp configurations/Creality\ Ender/BLT/Configuration_adv.h Marlin/Configuration_adv.h
        cp configurations/Creality\ Ender/BLT/Version.h Marlin/Version.h
        sed -i "s/default_envs =.*/default_envs = GD32F303RE_creality_maple/g" platformio.ini
        if ($IS); then TEMP=; else TEMP='\/\/'; fi;
        sed -i "s/[^ ]*#define INPUT_SHAPING_X/$TEMP#define INPUT_SHAPING_X/g" Marlin/Configuration_adv.h
        sed -i "s/[^ ]*#define INPUT_SHAPING_Y/$TEMP#define INPUT_SHAPING_Y/g" Marlin/Configuration_adv.h
        if ($TP); then PTEMP='\/\/'; else PTEMP=; fi;
        sed -i "s/[^ ]*#define PIDTEMP/$PTEMP#define PIDTEMP/g" Marlin/Configuration.h
        if ($TP); then MTEMP=; else MTEMP='\/\/'; fi;
        sed -i "s/[^ ]*#define MPCTEMP/$MTEMP#define MPCTEMP/g" Marlin/Configuration.h
        if ($TJC); then TJEMP=; else TJEMP='\/\/'; fi;
        sed -i "s/[^ ]*#define TJC_DISPLAY/$TJEMP#define TJC_DISPLAY/g" Marlin/Configuration.h
        pio run
        mkdir temp
        mv .pio/build/GD32F303RE_creality_maple/*.bin temp/build.bin
      env:
        TP: ${{ matrix.temp }}
        IS: ${{ matrix.inshape }}
        TJC: ${{ matrix.tjc }}
    - name: Get release
      id: get_release
      uses: bruceadams/get-release@v1.3.2
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Upload Release Asset
      uses: tanyagray/action-upload-release-asset@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: temp/build.bin
        asset_name: ${{ steps.build_configs.outputs.filename }}
        asset_content_type: application/x-binary
  Build-Default-E4:            # Default NoPro for Ender-3
    name: Build Default Files Ender E4
    runs-on: ubuntu-latest
    strategy:
      matrix:
        chip: [427,422]
        temp: [true,false]
        inshape: [true,false]
        tjc: [true,false]
    steps:
    - uses: actions/checkout@v3
    - name: Setup node
      uses: actions/setup-node@v3
      with:
        node-version: 16
    - name: Cache pip
      uses: actions/cache@v3.3.2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Cache PlatformIO
      uses: actions/cache@v3.3.2
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install PlatformIO
      run: |
        python3 -m pip install --upgrade pip
        pip install --upgrade pip
        pip install --upgrade wheel
        pip install --upgrade platformio
    - name: Run PlatformIO
      id: build_configs
      run: |
        if ($TP); then TPTMP=-MPC; else TPTMP=; fi;
        if ($IS); then ISTMP=-IS; else ISTMP=; fi;
        if [ "$ENDER_VER" = 427 ]; then EVTMP="427"; else EVTMP="422"; fi;
        if ($TJC); then DTMP=TJC-; else DTMP=; fi;
        echo "filename=${DTMP}Ender_${EVTMP}_Default-NoPro${ISTMP}${TPTMP}.bin" >> $GITHUB_OUTPUT
        > Marlin/Configuration.h
        > Marlin/Configuration_adv.h
        > Marlin/Version.h
        cp configurations/Creality\ Ender/Default-NP/Configuration.h Marlin/Configuration.h
        cp configurations/Creality\ Ender/Default-NP/Configuration_adv.h Marlin/Configuration_adv.h
        cp configurations/Creality\ Ender/Default-NP/Version.h Marlin/Version.h
        sed -i "s/default_envs =.*/default_envs = STM32F103RE_creality/g" platformio.ini
        if [ "$ENDER_VER" = 427 ]; then DBORD='CREALITY_V427'; else DBORD='CREALITY_V422'; fi;
        sed -i "s/[^ ]*#define MOTHERBOARD BOARD_.*/#define MOTHERBOARD BOARD_$DBORD/g" Marlin/Configuration.h
        if ($IS); then TEMP=; else TEMP='\/\/'; fi;
        sed -i "s/[^ ]*#define INPUT_SHAPING_X/$TEMP#define INPUT_SHAPING_X/g" Marlin/Configuration_adv.h
        sed -i "s/[^ ]*#define INPUT_SHAPING_Y/$TEMP#define INPUT_SHAPING_Y/g" Marlin/Configuration_adv.h
        if ($TP); then PTEMP='\/\/'; else PTEMP=; fi;
        sed -i "s/[^ ]*#define PIDTEMP/$PTEMP#define PIDTEMP/g" Marlin/Configuration.h
        if ($TP); then MTEMP=; else MTEMP='\/\/'; fi;
        sed -i "s/[^ ]*#define MPCTEMP/$MTEMP#define MPCTEMP/g" Marlin/Configuration.h
        if ($TJC); then TJEMP=; else TJEMP='\/\/'; fi;
        sed -i "s/[^ ]*#define TJC_DISPLAY/$TJEMP#define TJC_DISPLAY/g" Marlin/Configuration.h
        pio run
        mkdir temp
        mv .pio/build/STM32F103RE_creality/*.bin temp/build.bin
      env:
        ENDER_VER: ${{ matrix.chip }}
        TP: ${{ matrix.temp }}
        IS: ${{ matrix.inshape }}
        TJC: ${{ matrix.tjc }}
    - name: Get release
      id: get_release
      uses: bruceadams/get-release@v1.3.2
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Upload Release Asset
      uses: tanyagray/action-upload-release-asset@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: temp/build.bin
        asset_name: ${{ steps.build_configs.outputs.filename }}
        asset_content_type: application/x-binary
  Build-Manual-Mesh-E4:        # MM Pro for Ender-3
    name: Build Manual-Mesh Files E4
    runs-on: ubuntu-latest
    strategy:
      matrix:
        chip: [427,422]
        temp: [true,false]
        inshape: [true,false]
        tjc: [true,false]
    steps:
    - uses: actions/checkout@v3
    - name: Setup node
      uses: actions/setup-node@v3
      with:
        node-version: 16
    - name: Cache pip
      uses: actions/cache@v3.3.2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Cache PlatformIO
      uses: actions/cache@v3.3.2
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install PlatformIO
      run: |
        python3 -m pip install --upgrade pip
        pip install --upgrade pip
        pip install --upgrade wheel
        pip install --upgrade platformio
    - name: Run PlatformIO
      id: build_configs
      run: |
        if ($TP); then TPTMP=-MPC; else TPTMP=; fi;
        if ($IS); then ISTMP=-IS; else ISTMP=; fi;
        if [ "$ENDER_VER" = 427 ]; then EVTMP="427"; else EVTMP="422"; fi;
        if ($TJC); then DTMP=TJC-; else DTMP=; fi;
        echo "filename=${DTMP}Ender_${EVTMP}_MM-ProUI${ISTMP}${TPTMP}.bin" >> $GITHUB_OUTPUT
        > Marlin/Configuration.h
        > Marlin/Configuration_adv.h
        > Marlin/Version.h
        cp configurations/Creality\ Ender/MM/Configuration.h Marlin/Configuration.h
        cp configurations/Creality\ Ender/MM/Configuration_adv.h Marlin/Configuration_adv.h
        cp configurations/Creality\ Ender/MM/Version.h Marlin/Version.h
        sed -i "s/default_envs =.*/default_envs = STM32F103RE_creality/g" platformio.ini
        if [ "$ENDER_VER" = 427 ]; then DBORD='CREALITY_V427'; else DBORD='CREALITY_V422'; fi;
        sed -i "s/[^ ]*#define MOTHERBOARD BOARD_.*/#define MOTHERBOARD BOARD_$DBORD/g" Marlin/Configuration.h
        if ($IS); then TEMP=; else TEMP='\/\/'; fi;
        sed -i "s/[^ ]*#define INPUT_SHAPING_X/$TEMP#define INPUT_SHAPING_X/g" Marlin/Configuration_adv.h
        sed -i "s/[^ ]*#define INPUT_SHAPING_Y/$TEMP#define INPUT_SHAPING_Y/g" Marlin/Configuration_adv.h
        if ($TP); then PTEMP='\/\/'; else PTEMP=; fi;
        sed -i "s/[^ ]*#define PIDTEMP/$PTEMP#define PIDTEMP/g" Marlin/Configuration.h
        if ($TP); then MTEMP=; else MTEMP='\/\/'; fi;
        sed -i "s/[^ ]*#define MPCTEMP/$MTEMP#define MPCTEMP/g" Marlin/Configuration.h
        if ($TJC); then TJEMP=; else TJEMP='\/\/'; fi;
        sed -i "s/[^ ]*#define TJC_DISPLAY/$TJEMP#define TJC_DISPLAY/g" Marlin/Configuration.h
        pio run
        mkdir temp
        mv .pio/build/STM32F103RE_creality/*.bin temp/build.bin
      env:
        ENDER_VER: ${{ matrix.chip }}
        TP: ${{ matrix.temp }}
        IS: ${{ matrix.inshape }}
        TJC: ${{ matrix.tjc }}
    - name: Get release
      id: get_release
      uses: bruceadams/get-release@v1.3.2
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Upload Release Asset
      uses: tanyagray/action-upload-release-asset@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: temp/build.bin
        asset_name: ${{ steps.build_configs.outputs.filename }}
        asset_content_type: application/x-binary
  Build-UBL-ProUI-E4:            # UBL Pro for Ender-3
    name: Build UBL Pro Files E4
    runs-on: ubuntu-latest
    strategy:
      matrix:
        chip: [427,422]
        temp: [true,false]
        inshape: [true,false]
        tjc: [true,false]
        t13: [true,false]
    steps:
    - uses: actions/checkout@v3
    - name: Setup node
      uses: actions/setup-node@v3
      with:
        node-version: 16
    - name: Cache pip
      uses: actions/cache@v3.3.2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Cache PlatformIO
      uses: actions/cache@v3.3.2
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install PlatformIO
      run: |
        python3 -m pip install --upgrade pip
        pip install --upgrade pip
        pip install --upgrade wheel
        pip install --upgrade platformio
    - name: Run PlatformIO
      id: build_configs
      run: |
        if ($TP); then TPTMP=-MPC; else TPTMP=; fi;
        if ($IS); then ISTMP=-IS; else ISTMP=; fi;
        if [ "$ENDER_VER" = 427 ]; then EVTMP="427"; else EVTMP="422"; fi;
        if ($TJC); then DTMP=TJC-; else DTMP=; fi;
        if ($T13); then TTMP=-SpriteT13; else TTMP=; fi
        echo "filename=${DTMP}Ender${TTMP}_${EVTMP}_UBL-ProUI${ISTMP}${TPTMP}.bin" >> $GITHUB_OUTPUT
        > Marlin/Configuration.h
        > Marlin/Configuration_adv.h
        > Marlin/Version.h
        cp configurations/Creality\ Ender/UBL/Configuration.h Marlin/Configuration.h
        cp configurations/Creality\ Ender/UBL/Configuration_adv.h Marlin/Configuration_adv.h
        cp configurations/Creality\ Ender/UBL/Version.h Marlin/Version.h
        sed -i "s/default_envs =.*/default_envs = STM32F103RE_creality/g" platformio.ini
        if [ "$ENDER_VER" = 427 ]; then DBORD='CREALITY_V427'; else DBORD='CREALITY_V422'; fi;
        sed -i "s/[^ ]*#define MOTHERBOARD BOARD_.*/#define MOTHERBOARD BOARD_$DBORD/g" Marlin/Configuration.h
        if ($IS); then TEMP=; else TEMP='\/\/'; fi;
        sed -i "s/[^ ]*#define INPUT_SHAPING_X/$TEMP#define INPUT_SHAPING_X/g" Marlin/Configuration_adv.h
        sed -i "s/[^ ]*#define INPUT_SHAPING_Y/$TEMP#define INPUT_SHAPING_Y/g" Marlin/Configuration_adv.h
        if ($TP); then PTEMP='\/\/'; else PTEMP=; fi;
        sed -i "s/[^ ]*#define PIDTEMP/$PTEMP#define PIDTEMP/g" Marlin/Configuration.h
        if ($TP); then MTEMP=; else MTEMP='\/\/'; fi;
        sed -i "s/[^ ]*#define MPCTEMP/$MTEMP#define MPCTEMP/g" Marlin/Configuration.h
        if ($TJC); then TJEMP=; else TJEMP='\/\/'; fi;
        sed -i "s/[^ ]*#define TJC_DISPLAY/$TJEMP#define TJC_DISPLAY/g" Marlin/Configuration.h
        if ($T13); then THMP="13"; else THMP="1"; fi;
        sed -i "s/^#define TEMP_SENSOR_0 1/#define TEMP_SENSOR_0 $THMP/g" Marlin/Configuration.h
        pio run
        mkdir temp
        mv .pio/build/STM32F103RE_creality/*.bin temp/build.bin
      env:
        ENDER_VER: ${{ matrix.chip }}
        TP: ${{ matrix.temp }}
        IS: ${{ matrix.inshape }}
        TJC: ${{ matrix.tjc }}
        T13: ${{ matrix.t13 }}
    - name: Get release
      id: get_release
      uses: bruceadams/get-release@v1.3.2
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Upload Release Asset
      uses: tanyagray/action-upload-release-asset@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: temp/build.bin
        asset_name: ${{ steps.build_configs.outputs.filename }}
        asset_content_type: application/x-binary
  Build-BLTouch-E4:            # BLTouch Pro for Ender-3
    name: Build BLT Pro Files E4
    runs-on: ubuntu-latest
    strategy:
      matrix:
        chip: [427,422]
        temp: [true,false]
        inshape: [true,false]
        tjc: [true,false]
    steps:
    - uses: actions/checkout@v3
    - name: Setup node
      uses: actions/setup-node@v3
      with:
        node-version: 16
    - name: Cache pip
      uses: actions/cache@v3.3.2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Cache PlatformIO
      uses: actions/cache@v3.3.2
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install PlatformIO
      run: |
        python3 -m pip install --upgrade pip
        pip install --upgrade pip
        pip install --upgrade wheel
        pip install --upgrade platformio
    - name: Run PlatformIO
      id: build_configs
      run: |
        if ($TP); then TPTMP=-MPC; else TPTMP=; fi;
        if ($IS); then ISTMP=-IS; else ISTMP=; fi;
        if [ "$ENDER_VER" = 427 ]; then EVTMP="427"; else EVTMP="422"; fi;
        if ($TJC); then DTMP=TJC-; else DTMP=; fi;
        echo "filename=${DTMP}Ender_${EVTMP}_BLT-ProUI${ISTMP}${TPTMP}.bin" >> $GITHUB_OUTPUT
        > Marlin/Configuration.h
        > Marlin/Configuration_adv.h
        > Marlin/Version.h
        cp configurations/Creality\ Ender/BLT/Configuration.h Marlin/Configuration.h
        cp configurations/Creality\ Ender/BLT/Configuration_adv.h Marlin/Configuration_adv.h
        cp configurations/Creality\ Ender/BLT/Version.h Marlin/Version.h
        sed -i "s/default_envs =.*/default_envs = STM32F103RE_creality/g" platformio.ini
        if [ "$ENDER_VER" = 427 ]; then DBORD='CREALITY_V427'; else DBORD='CREALITY_V422'; fi;
        sed -i "s/[^ ]*#define MOTHERBOARD BOARD_.*/#define MOTHERBOARD BOARD_$DBORD/g" Marlin/Configuration.h
        if ($IS); then TEMP=; else TEMP='\/\/'; fi;
        sed -i "s/[^ ]*#define INPUT_SHAPING_X/$TEMP#define INPUT_SHAPING_X/g" Marlin/Configuration_adv.h
        sed -i "s/[^ ]*#define INPUT_SHAPING_Y/$TEMP#define INPUT_SHAPING_Y/g" Marlin/Configuration_adv.h
        if ($TP); then PTEMP='\/\/'; else PTEMP=; fi;
        sed -i "s/[^ ]*#define PIDTEMP/$PTEMP#define PIDTEMP/g" Marlin/Configuration.h
        if ($TP); then MTEMP=; else MTEMP='\/\/'; fi;
        sed -i "s/[^ ]*#define MPCTEMP/$MTEMP#define MPCTEMP/g" Marlin/Configuration.h
        if ($TJC); then TJEMP=; else TJEMP='\/\/'; fi;
        sed -i "s/[^ ]*#define TJC_DISPLAY/$TJEMP#define TJC_DISPLAY/g" Marlin/Configuration.h
        pio run
        mkdir temp
        mv .pio/build/STM32F103RE_creality/*.bin temp/build.bin
      env:
        ENDER_VER: ${{ matrix.chip }}
        TP: ${{ matrix.temp }}
        IS: ${{ matrix.inshape }}
        TJC: ${{ matrix.tjc }}
    - name: Get release
      id: get_release
      uses: bruceadams/get-release@v1.3.2
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Upload Release Asset
      uses: tanyagray/action-upload-release-asset@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: temp/build.bin
        asset_name: ${{ steps.build_configs.outputs.filename }}
        asset_content_type: application/x-binary
